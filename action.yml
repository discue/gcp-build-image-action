name: "GCP Build Image"
description: "Build and push container images to Google Cloud using Cloud Build"
author: "discue"

inputs:
  image:
    description: "The full image URL to build (e.g., europe-west3-docker.pkg.dev/project/repository/image)"
    required: true

  project:
    description: "Google Cloud project ID"
    required: false

  region:
    description: "Google Cloud region"
    required: false

  impersonate:
    description: "Service account email to impersonate"
    required: false

  quiet:
    description: "Run in quiet mode"
    required: false
    default: "true"

  source:
    description: "Source directory to build from"
    required: false
    default: "."

  builder:
    description: "Build method: 'buildpack' (default) or 'dockerfile'"
    required: false
    default: "buildpack"

outputs:
  image-url:
    description: "The built image URL"
    value: ${{ steps.build.outputs.image-url }}

runs:
  using: "composite"
  steps:
    - name: Build image with Cloud Build
      id: build
      shell: bash
      run: |
        # Set up variables
        IMAGE="${{ inputs.image }}"
        SOURCE="${{ inputs.source }}"
        QUIET_FLAG=""

        # Set impersonation flag if provided
        IMPERSONATE_FLAG=""
        if [[ -n "${{ inputs.impersonate }}" ]]; then
          IMPERSONATE_FLAG="--impersonate-service-account=${{ inputs.impersonate }}"
        fi

        if [[ "${{ inputs.quiet }}" == "true" ]]; then
          QUIET_FLAG="--quiet"
        fi

        # Set project if provided
        if [[ -n "${{ inputs.project }}" ]]; then
          gcloud config set project "${{ inputs.project }}"
        fi

        # Set region if provided
        if [[ -n "${{ inputs.region }}" ]]; then
          gcloud config set builds/region "${{ inputs.region }}"
        fi

        echo "Building image: $IMAGE"
        echo "Source directory: $SOURCE"



        # Determine build method: builder input, or auto-detect Dockerfile
        BUILD_METHOD="${{ inputs.builder }}"
        if [[ -z "$BUILD_METHOD" ]]; then
          if [[ -f "$SOURCE/Dockerfile" ]]; then
            BUILD_METHOD="dockerfile"
          else
            BUILD_METHOD="buildpack"
          fi
        fi

        # Set build flag for gcloud
        BUILD_FLAG=""
        if [[ "$BUILD_METHOD" == "dockerfile" ]]; then
          BUILD_FLAG="--tag \"${IMAGE}\""
        else
          BUILD_FLAG="--pack image=\"${IMAGE}\""
        fi

        # Run gcloud builds submit with the correct flag
        eval gcloud builds submit ${QUIET_FLAG} ${IMPERSONATE_FLAG} ${BUILD_FLAG} "${SOURCE}"

        # Output the image URL
        echo "image-url=${IMAGE}" >> $GITHUB_OUTPUT

        echo "Successfully built image: $IMAGE"

branding:
  icon: "package"
  color: "green"
